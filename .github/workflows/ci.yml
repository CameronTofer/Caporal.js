name: "Continous integration"

on:
  pull_request:
    branches:
      - "**"

jobs:
  run-tests:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        node: ["16", "18", "20"]
        os: ["ubuntu-latest"]

    name: "node ${{ matrix.node }} / ${{ matrix.os }}"
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: "pnpm"

      # See: https://github.com/pnpm/action-setup#use-cache-to-reduce-installation-time
      - name: Get pnpm store directory
        shell: bash
        id: pnpm-store-path
        run: |
          echo "PNPM_STORE_PATH=$(pnpm store path --silent)" >> "$GITHUB_OUTPUT"

      # See: https://github.com/pnpm/action-setup#use-cache-to-reduce-installation-time
      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-store-path.outputs.PNPM_STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: pnpm install

      - name: Install dependencies
        run: pnpm ci

        # build before testing as some tests actually test the build
      - name: Build
        run: pnpm build

      - name: Lint
        run: pnpm lint

      - name: Run tests
        run: pnpm test

      - name: Run dist tests
        run: pnpm test:dist

  # deploy-preview:
  #   name: "Deploy preview website"
  #   runs-on: ubuntu-latest
  #   needs: run-tests
  #   continue-on-error: true
  #   if: ${{ github.event_name == 'pull_request' || github.ref != 'master' }}
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: amondnet/now-deployment@v2
  #       id: now-deploy
  #       with:
  #         github-comment: false
  #         zeit-token: ${{ secrets.ZEIT_TOKEN }}
  #         now-args: "-A now.preview.json"
  #         now-org-id: ${{ secrets.ZEIT_ORG_ID}}
  #         now-project-id: ${{ secrets.ZEIT_PROJECT_ID}}

  #     - uses: actions/setup-node@v1
  #       with:
  #         node-version: 12

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Alias
  #       id: caporal-preview
  #       env:
  #         NOW_ORG_ID: ${{ secrets.ZEIT_ORG_ID}}
  #         NOW_PROJECT_ID: ${{ secrets.ZEIT_PROJECT_ID}}
  #       run: |
  #         clean_url=$(echo "${{Â steps.now-deploy.outputs.preview-url }}" | cut -c9-)
  #         clean_ref=$(basename "${{ github.head_ref }}")
  #         clean_sha=$(echo "${{ github.sha }}" | cut -c1-7)
  #         npm run now -- alias -A now.preview.json --token ${{ secrets.ZEIT_TOKEN }} set $clean_url ${clean_ref}.caporal.run
  #         npm run now -- alias -A now.preview.json --token ${{ secrets.ZEIT_TOKEN }} set $clean_url ${clean_sha}.caporal.run
  #         echo "::set-output name=url_ref::https://${clean_ref}.caporal.run"
  #         echo "::set-output name=url_sha::https://${clean_sha}.caporal.run"

  #     - uses: chrnorm/deployment-action@releases/v1
  #       name: Create GitHub deployment for commit
  #       id: commit-deployment
  #       if: ${{ success() }}
  #       with:
  #         initial_status: success
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         target_url: ${{ steps.caporal-preview.outputs.url_sha }}
  #         environment: Commit-preview

  #     - uses: chrnorm/deployment-action@releases/v1
  #       name: Create GitHub deployment for branch
  #       id: branch-deployment
  #       if: ${{ success() }}
  #       with:
  #         initial_status: success
  #         token: ${{ secrets.GITHUB_TOKEN }}
  #         target_url: ${{ steps.caporal-preview.outputs.url_ref }}
  #         environment: Branch-preview

  #     - name: comment PR
  #       uses: unsplash/comment-on-pr@master
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         msg: |
  #           :rocket: Caporal website preview available at: ${{ steps.caporal-preview.outputs.url_ref }}
  #           You can also checkout the [coverage report here](${{ steps.caporal-preview.outputs.url_ref }}/coverage/lcov-report/).
  #         check_for_duplicate_msg: true
